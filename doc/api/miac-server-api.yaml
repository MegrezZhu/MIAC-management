---
swagger: "2.0"
info:
  description: "This is the MIAC management API server"
  version: "beta"
  title: "MIAC management API"
  contact:
    url: "https://github.com/SYSU-MIAC/MIAC-management/issues"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1"
basePath: "/api"
tags:
- name: "article"
  description: "Operations about articles"
- name: "user"
  description: "Operations about user"
- name: "homework"
  description: "Operations about user"
- name: "administrator"
  description: "administrator only"
  externalDocs:
    description: "Find out more about this project"
    url: "https://github.com/SYSU-MIAC/MIAC-management"
schemes:
- "http"
paths:
  /hw:
    post:
      tags:
      - "homework"
      - "administrator"
      summary: "Add a new homework"
      description: "only administrator can create new homework"
      operationId: "addHomework"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "title"
          in: "formData"
          required: true
          type: "string"
        - name: "description"
          in: "formData"
          required: true
          type: "string"
        - name: "attachment"
          in: "formData"
          type: "file"
      responses:
        200:
          description: "Success"
      x-swagger-router-controller: "homework"
  /hw/{hwId}:
    get:
      tags:
      - "homework"
      summary: "Get homework by homework id"
      description: ""
      operationId: "getOneHomework"
      produces:
      - "application/json"
      parameters:
      - name: "hwId"
        in: "path"
        description: "Homework id"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/Homework"
        400:
          description: "Invalid homework id"
        404:
          description: "Homework not found"
      x-swagger-router-controller: "homework"
    post:
      tags:
      - "homework"
      summary: "Hand in homework"
      description: ""
      operationId: "postHomework"
      parameters:
        - name: "hwId"
          in: "path"
          description: "homework id"
          required: true
          type: "string"
        - name: "submission"
          in: "formData"
          required: true
          type: "file"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid homework id"
        403:
          description: "Homework not assigned to current user"
        404:
          description: "Homework not found"
      x-swagger-router-controller: "homework"
    delete:
      tags:
      - "homework"
      - "administrator"
      summary: "Delete a homework by homework id"
      description: "only administrator can delete a homework"
      operationId: "deleteHomework"
      parameters:
        - name: "hwId"
          in: "path"
          description: "homework id"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid homework id"
        403:
          description: "Homework not assigned to commented user"
        404:
          description: "Homework not found"
      x-swagger-router-controller: "homework"
  /hw/{hwId}/comment/{userId}:
    post:
      tags:
      - "homework"
      summary: "administrator post comment to club member"
      operationId: "commentHomework"
      produces:
      - "application/json"
      parameters:
        - name: "hwId"
          in: "path"
          description: "homework id"
          required: true
          type: "string"
        - name: "userId"
          in: "path"
          description: "club member id"
          required: true
          type: "string"
        - name: "content"
          in: "body"
          description: "comment content"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid homework/user id"
        404:
          description: "Homework not found"
      x-swagger-router-controller: "homework"
  /article:
    post:
      tags:
      - "article"
      summary: "Add a new article"
      description: ""
      operationId: "addArticle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Article object"
        required: true
        schema:
          $ref: "#/definitions/Article"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid fields"
      x-swagger-router-controller: "article"
  /article/{articleId}:
    get:
      tags:
      - "article"
      summary: "Find article by ID"
      description: "Returns a single article"
      operationId: "getArticleById"
      produces:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "article id"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Article"
        400:
          description: "Invalid article id"
        404:
          description: "Article not found"
      x-swagger-router-controller: "article"
    put:
      tags:
      - "article"
      summary: "Update an article"
      description: "only the author of the article or the administrator can update it"
      operationId: "updateArticle"
      produces:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "Article id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated article object"
        required: true
        schema:
          $ref: "#/definitions/Article"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid fields"
        404:
          description: "Article not found"
      x-swagger-router-controller: "article"
    delete:
      tags:
      - "article"
      summary: "Deletes a article"
      description: "only the author of the article or the administrator can delete it"
      operationId: "deleteArticle"
      produces:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "article id to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid article id"
        404:
          description: "Article not found"
      x-swagger-router-controller: "article"
  /article/{articleId}/comment:
    post:
      tags:
      - "article"
      summary: "comment to an article"
      description: ""
      operationId: "commentArticle"
      produces:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "article id"
        required: true
        type: "string"
      - name: "content"
        in: "body"
        description: "comment content"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid article id"
        404:
          description: "Article not found"
      x-swagger-router-controller: "article"
  /user:
    post:
      tags:
      - "user"
      - "administrator"
      summary: "Create user"
      description: "This can only be done by the administrator."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid fields"
        403:
          description: "Permission denied"
      x-swagger-router-controller: "User"
  /user/login:
    get:
      tags:
      - "user"
      summary: "Get self login information"
      description: ""
      operationId: "getLoginUser"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/User"
      x-swagger-router-controller: "User"
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "body"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "body"
        description: "The password for login in encryted text"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid username/password supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success"
        401:
          description: "Not authorized"
      x-swagger-router-controller: "User"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Get user by user id"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid user id"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "user that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success/User not modified"
        400:
          description: "Invalid user id/fields"
        403:
          description: "Not user himself"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      nickname:
        type: "string"
      email:
        type: "string"
      github:
        type: "string"
      # permission:
      #   type: "integer"
      #   format: "int32"
  Article:
    type: "object"
    properties:
      title:
        type: "string"
      content:
        type: "string"
